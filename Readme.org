#+title: Wrench: control your Android phone from your Desktop

Here's a video of Wrench: playing monument valley (with phone screen mirrored), using Lua to script your phone, and ordering coffee (kinda).

[[https://www.youtube.com/watch?v=re_bECYY0rM][http://baohaojun.github.io/images/Wrench-2.png]]

* Install

There are prebuilt versions for Windows, Mac and Linux (ubuntu 14.04). They are released at https://github.com/SmartisanTech/Wrench-releases/releases .

** Compilation

Under Linux, compile Wrench with the =build-linux.sh= script. You should be able to run this script directly.

For Windows version, I compile with Wine under Linux, with the Qt for msys installed as compiler. Please refer to the =./build-wine.sh= script.

For Mac version, please refer to the =./build-mac.sh= script.

You need to adapt the =./build-wine.sh= and =./build-mac.sh= scripts, there are some hardcoded parameters (such as the PATH environment and the Mac hostname).

* How does it work

Android has provided quite some debugging abilities through adb, for example, you can

1. Inject keyboard and touch events with =input=
2. Start Activities and Services with =am start|startservice=
3. Take a screen shot with =screencap=
4. Record your screen with =screenrecord=
5. Dump window infomation with =dumpsys window= (where you can also get infomation about the Input Method)

Wrench just makes use of all the above, with a great deal of optimization.

** Optimazations

*** =better and faster adb shell input=

Android's builtin =input= command allows you to inject touch, keyboard, text events, but there're some limitations.

1. You can use =adb shell input text <string>= to input a string, but the string is limited: it can't contain spaces or any other special characters, such as quote and double quote, or Chinese characters.

   I solved this problem by using the Android clipboard and my own Input Method WrenchIme adapted from Google Pinyin. When Wrench need to input any string, it:

   - Put the string into the phone's clipboard.
   - Trigger a special key (SCROLL_LOCK) with =adb shell input=
   - WrenchIme interpret the SCROLL_LOCK key to send the clipboard text to the current App, as if the text is an IME candidate and has been selected.


2. =adb shell input= is very slow, because every time =input= is run, a =framework/input.jar= is loaded and a new java virtual machine is created by running =app_process=.

   To solve this problem, Wrench comes with a Setclip.apk, which whileas being an Android Apk, it also provides the functionality of =framework/input.jar= (i.e., it can also be loaded and run by =app_process=), but instead of loading every time, it loads once and then runs as a daemon.

*** faster =adb shell am=

For the same reason as =adb shell input=, =am= is also very slow because an =am.jar= is loaded with a new java virtual machine each time. Wrench improved it using the same trick as =input=, in fact, Setclip.apk will load =am.jar= in turn when it is daemonized.

(Wrench's am.jar is from AOSP, with userdebug build to make sure the .dex java class files are not optimized away and thus dalvik loadable.)

*** faster phone screen mirroring

At first, Wrench used =screencap= to make a screenshot of the phone screen, and displayed on the PC. This is very slow.

Now, with some phones (according to the Android version and CPU arch), Wrench can use the VNC protocol to mirror your phone screen, which is a lot smoother as you can see from the video. In doing this, Wrench used source code from 3 projects: it combined the AOSP [[https://android.googlesource.com/platform/frameworks/av/%2B/master/cmds/screenrecord/][screenrecord]] project and the [[https://github.com/oNaiPs/droidVncServer][droidVncServer]] project to run a VNC server on the phone; and used the [[https://sourceforge.net/projects/qvncviewer/][Qt VNC Viewer]] to talk to the phone's VNC server.

* How to use Wrench

Please refer to [[https://www.youtube.com/watch?v%3Dv8QVFbYDnCQ][this youtube video]].

There is also [[http://baohaojun.github.io/blog/2014/12/01/0-T1Wrench-2.0-Usage-Guide.html][a blog]] explaining all the details, but it's in Chinese.

Here's the simple steps:

1. Start the Wrench program
2. Enable the phone's USB debugging.
3. Connect the phone to Desktop with USB.

(Wrench comes with it's own =adb= program, so you need to make sure you are not running a different version.)

* Contribute

Bug reports, patches, ideas are welcome.

Or, if you like Wrench, you may also donate some money to me with Paypal:

https://pledgie.com/campaigns/32699

or with alipay:

[[./bhj-alipay.png]]
